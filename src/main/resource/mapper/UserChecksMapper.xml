<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fire.dao.UserChecksMapper">
  <resultMap id="BaseResultMap" type="com.fire.bean.UserChecks">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="UserId" jdbcType="VARCHAR" property="userid" />
    <result column="UserName" jdbcType="VARCHAR" property="username" />
    <result column="CheckInTime" jdbcType="TIMESTAMP" property="checkintime" />
    <result column="CheckState" jdbcType="VARCHAR" property="checkstate" />
    <result column="IsCancel" jdbcType="VARCHAR" property="iscancel" />
    <result column="CheckOutTime" jdbcType="TIMESTAMP" property="checkouttime" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, UserId, UserName, CheckInTime, CheckState, IsCancel, CheckOutTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userchecks
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from userchecks
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fire.bean.UserChecks">
    insert into userchecks (Id, UserId, UserName, 
      CheckInTime, CheckState, IsCancel, 
      CheckOutTime)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{checkintime,jdbcType=TIMESTAMP}, #{checkstate,jdbcType=VARCHAR}, #{iscancel,jdbcType=VARCHAR}, 
      #{checkouttime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.fire.bean.UserChecks">
    insert into userchecks
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="userid != null">
        UserId,
      </if>
      <if test="username != null">
        UserName,
      </if>
      <if test="checkintime != null">
        CheckInTime,
      </if>
      <if test="checkstate != null">
        CheckState,
      </if>
      <if test="iscancel != null">
        IsCancel,
      </if>
      <if test="checkouttime != null">
        CheckOutTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="checkintime != null">
        #{checkintime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkstate != null">
        #{checkstate,jdbcType=VARCHAR},
      </if>
      <if test="iscancel != null">
        #{iscancel,jdbcType=VARCHAR},
      </if>
      <if test="checkouttime != null">
        #{checkouttime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fire.bean.UserChecks">
    update userchecks
    <set>
      <if test="userid != null">
        UserId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="checkintime != null">
        CheckInTime = #{checkintime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkstate != null">
        CheckState = #{checkstate,jdbcType=VARCHAR},
      </if>
      <if test="iscancel != null">
        IsCancel = #{iscancel,jdbcType=VARCHAR},
      </if>
      <if test="checkouttime != null">
        CheckOutTime = #{checkouttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fire.bean.UserChecks">
    update userchecks
    set UserId = #{userid,jdbcType=VARCHAR},
      UserName = #{username,jdbcType=VARCHAR},
      CheckInTime = #{checkintime,jdbcType=TIMESTAMP},
      CheckState = #{checkstate,jdbcType=VARCHAR},
      IsCancel = #{iscancel,jdbcType=VARCHAR},
      CheckOutTime = #{checkouttime,jdbcType=TIMESTAMP}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>